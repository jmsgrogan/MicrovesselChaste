// This file has been generated by Py++.

#include "boost/python.hpp"

#include "cell_headers.hpp"

namespace bp = boost::python;

struct Owen2011OxygenBasedCellCycleModel_wrapper : Owen2011OxygenBasedCellCycleModel, bp::wrapper< Owen2011OxygenBasedCellCycleModel > {

    Owen2011OxygenBasedCellCycleModel_wrapper(Owen2011OxygenBasedCellCycleModel const & arg )
    : Owen2011OxygenBasedCellCycleModel( arg )
      , bp::wrapper< Owen2011OxygenBasedCellCycleModel >(){
        // copy constructor
        
    }

    Owen2011OxygenBasedCellCycleModel_wrapper(::boost::shared_ptr< AbstractCellCycleModelOdeSolver > pOdeSolver=boost::shared_ptr<AbstractCellCycleModelOdeSolver>() )
    : Owen2011OxygenBasedCellCycleModel( pOdeSolver )
      , bp::wrapper< Owen2011OxygenBasedCellCycleModel >(){
        // constructor
    
    }

    virtual ::AbstractCellCycleModel * CreateCellCycleModel(  ) {
        if( bp::override func_CreateCellCycleModel = this->get_override( "CreateCellCycleModel" ) )
            return func_CreateCellCycleModel(  );
        else{
            return this->Owen2011OxygenBasedCellCycleModel::CreateCellCycleModel(  );
        }
    }
    
    ::AbstractCellCycleModel * default_CreateCellCycleModel(  ) {
        return Owen2011OxygenBasedCellCycleModel::CreateCellCycleModel( );
    }

    virtual double GetG2Duration(  ) const  {
        if( bp::override func_GetG2Duration = this->get_override( "GetG2Duration" ) )
            return func_GetG2Duration(  );
        else{
            return this->Owen2011OxygenBasedCellCycleModel::GetG2Duration(  );
        }
    }
    
    double default_GetG2Duration(  ) const  {
        return Owen2011OxygenBasedCellCycleModel::GetG2Duration( );
    }

    virtual double GetMDuration(  ) const  {
        if( bp::override func_GetMDuration = this->get_override( "GetMDuration" ) )
            return func_GetMDuration(  );
        else{
            return this->Owen2011OxygenBasedCellCycleModel::GetMDuration(  );
        }
    }
    
    double default_GetMDuration(  ) const  {
        return Owen2011OxygenBasedCellCycleModel::GetMDuration( );
    }

    virtual double GetSDuration(  ) const  {
        if( bp::override func_GetSDuration = this->get_override( "GetSDuration" ) )
            return func_GetSDuration(  );
        else{
            return this->Owen2011OxygenBasedCellCycleModel::GetSDuration(  );
        }
    }
    
    double default_GetSDuration(  ) const  {
        return Owen2011OxygenBasedCellCycleModel::GetSDuration( );
    }

    virtual void Initialise(  ) {
        if( bp::override func_Initialise = this->get_override( "Initialise" ) )
            func_Initialise(  );
        else{
            this->Owen2011OxygenBasedCellCycleModel::Initialise(  );
        }
    }
    
    void default_Initialise(  ) {
        Owen2011OxygenBasedCellCycleModel::Initialise( );
    }

    virtual void InitialiseDaughterCell(  ) {
        if( bp::override func_InitialiseDaughterCell = this->get_override( "InitialiseDaughterCell" ) )
            func_InitialiseDaughterCell(  );
        else{
            this->Owen2011OxygenBasedCellCycleModel::InitialiseDaughterCell(  );
        }
    }
    
    void default_InitialiseDaughterCell(  ) {
        Owen2011OxygenBasedCellCycleModel::InitialiseDaughterCell( );
    }

    virtual void OutputCellCycleModelParameters( ::out_stream & rParamsFile ) {
        if( bp::override func_OutputCellCycleModelParameters = this->get_override( "OutputCellCycleModelParameters" ) )
            func_OutputCellCycleModelParameters( boost::ref(rParamsFile) );
        else{
            this->Owen2011OxygenBasedCellCycleModel::OutputCellCycleModelParameters( boost::ref(rParamsFile) );
        }
    }
    
    void default_OutputCellCycleModelParameters( ::out_stream & rParamsFile ) {
        Owen2011OxygenBasedCellCycleModel::OutputCellCycleModelParameters( boost::ref(rParamsFile) );
    }

    virtual bool ReadyToDivide(  ) {
        if( bp::override func_ReadyToDivide = this->get_override( "ReadyToDivide" ) )
            return func_ReadyToDivide(  );
        else{
            return this->Owen2011OxygenBasedCellCycleModel::ReadyToDivide(  );
        }
    }
    
    bool default_ReadyToDivide(  ) {
        return Owen2011OxygenBasedCellCycleModel::ReadyToDivide( );
    }

    virtual void ResetForDivision(  ) {
        if( bp::override func_ResetForDivision = this->get_override( "ResetForDivision" ) )
            func_ResetForDivision(  );
        else{
            this->Owen2011OxygenBasedCellCycleModel::ResetForDivision(  );
        }
    }
    
    void default_ResetForDivision(  ) {
        Owen2011OxygenBasedCellCycleModel::ResetForDivision( );
    }

    virtual void UpdateCellCyclePhase(  ) {
        if( bp::override func_UpdateCellCyclePhase = this->get_override( "UpdateCellCyclePhase" ) )
            func_UpdateCellCyclePhase(  );
        else{
            this->Owen2011OxygenBasedCellCycleModel::UpdateCellCyclePhase(  );
        }
    }
    
    void default_UpdateCellCyclePhase(  ) {
        Owen2011OxygenBasedCellCycleModel::UpdateCellCyclePhase( );
    }

};

BOOST_PYTHON_MODULE(_chaste_project_MicrovesselChaste_cell){
    bp::class_< CancerCellMutationState >( "CancerCellMutationState", "Subclass of AbstractCellMutationState defining a cancerous mutation state for the Vascular tumour model.\n/", bp::init< >("Constructor.\n/") );

    { //::Owen2011OxygenBasedCellCycleModel
        typedef bp::class_< Owen2011OxygenBasedCellCycleModel_wrapper > Owen2011OxygenBasedCellCycleModel_exposer_t;
        Owen2011OxygenBasedCellCycleModel_exposer_t Owen2011OxygenBasedCellCycleModel_exposer = Owen2011OxygenBasedCellCycleModel_exposer_t( "Owen2011OxygenBasedCellCycleModel", "Oxygen-dependent ODE-based cell-cycle model. Published by Owen et al. 2011\n/", bp::init< bp::optional< boost::shared_ptr< AbstractCellCycleModelOdeSolver > > >(( bp::arg("pOdeSolver")=boost::shared_ptr<AbstractCellCycleModelOdeSolver>() ), "Default constructor.\n@param pOdeSolver An optional pointer to a cell-cycle model ODE solver object (allows the use of different ODE solvers)\n/") );
        bp::scope Owen2011OxygenBasedCellCycleModel_scope( Owen2011OxygenBasedCellCycleModel_exposer );
        bp::implicitly_convertible< boost::shared_ptr< AbstractCellCycleModelOdeSolver >, Owen2011OxygenBasedCellCycleModel >();
        { //::Owen2011OxygenBasedCellCycleModel::CheckAndLabelCell
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*CheckAndLabelCell_function_type)(  ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "CheckAndLabelCell"
                , CheckAndLabelCell_function_type( &::Owen2011OxygenBasedCellCycleModel::CheckAndLabelCell )
                , "Check if the oxygen concentration of the cell is below the EnterQuiescenceOxygenConcentration.\nIf it is true the label cells.\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::GetCriticalQuiescentDuration
        
            typedef ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ( ::Owen2011OxygenBasedCellCycleModel::*GetCriticalQuiescentDuration_function_type)(  ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "GetCriticalQuiescentDuration"
                , GetCriticalQuiescentDuration_function_type( &::Owen2011OxygenBasedCellCycleModel::GetCriticalQuiescentDuration )
                , "@return mCriticalQuiescentDuration\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::GetCurrentQuiescenceOnsetTime
        
            typedef ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ( ::Owen2011OxygenBasedCellCycleModel::*GetCurrentQuiescenceOnsetTime_function_type)(  ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "GetCurrentQuiescenceOnsetTime"
                , GetCurrentQuiescenceOnsetTime_function_type( &::Owen2011OxygenBasedCellCycleModel::GetCurrentQuiescenceOnsetTime )
                , "@return mCurrentQuiescenceOnsetTime\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::GetCurrentQuiescentDuration
        
            typedef ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ( ::Owen2011OxygenBasedCellCycleModel::*GetCurrentQuiescentDuration_function_type)(  ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "GetCurrentQuiescentDuration"
                , GetCurrentQuiescentDuration_function_type( &::Owen2011OxygenBasedCellCycleModel::GetCurrentQuiescentDuration )
                , "@return mCurrentQuiescentDuration\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::GetEnterQuiescenceOxygenConcentration
        
            typedef ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< -1, 1 > >, boost::units::list< boost::units::dim< boost::units::mass_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< -2, 1 > >, boost::units::dimensionless_type > > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ( ::Owen2011OxygenBasedCellCycleModel::*GetEnterQuiescenceOxygenConcentration_function_type)(  ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "GetEnterQuiescenceOxygenConcentration"
                , GetEnterQuiescenceOxygenConcentration_function_type( &::Owen2011OxygenBasedCellCycleModel::GetEnterQuiescenceOxygenConcentration )
                , "@return mEnterQuiescenceOxygenConcentration\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::GetG2Duration
        
            typedef double ( ::Owen2011OxygenBasedCellCycleModel::*GetG2Duration_function_type)(  ) const;
            typedef double ( Owen2011OxygenBasedCellCycleModel_wrapper::*default_GetG2Duration_function_type)(  ) const;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "GetG2Duration"
                , GetG2Duration_function_type(&::Owen2011OxygenBasedCellCycleModel::GetG2Duration)
                , default_GetG2Duration_function_type(&Owen2011OxygenBasedCellCycleModel_wrapper::default_GetG2Duration) );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::GetLeaveQuiescenceOxygenConcentration
        
            typedef ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< -1, 1 > >, boost::units::list< boost::units::dim< boost::units::mass_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< -2, 1 > >, boost::units::dimensionless_type > > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ( ::Owen2011OxygenBasedCellCycleModel::*GetLeaveQuiescenceOxygenConcentration_function_type)(  ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "GetLeaveQuiescenceOxygenConcentration"
                , GetLeaveQuiescenceOxygenConcentration_function_type( &::Owen2011OxygenBasedCellCycleModel::GetLeaveQuiescenceOxygenConcentration )
                , "@return mLeaveQuiescenceOxygenConcentration\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::GetMDuration
        
            typedef double ( ::Owen2011OxygenBasedCellCycleModel::*GetMDuration_function_type)(  ) const;
            typedef double ( Owen2011OxygenBasedCellCycleModel_wrapper::*default_GetMDuration_function_type)(  ) const;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "GetMDuration"
                , GetMDuration_function_type(&::Owen2011OxygenBasedCellCycleModel::GetMDuration)
                , default_GetMDuration_function_type(&Owen2011OxygenBasedCellCycleModel_wrapper::default_GetMDuration) );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::GetP53
        
            typedef double ( ::Owen2011OxygenBasedCellCycleModel::*GetP53_function_type)(  ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "GetP53"
                , GetP53_function_type( &::Owen2011OxygenBasedCellCycleModel::GetP53 )
                , "Get the value of p53.\n@return the value of p53.\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::GetPhi
        
            typedef double ( ::Owen2011OxygenBasedCellCycleModel::*GetPhi_function_type)(  ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "GetPhi"
                , GetPhi_function_type( &::Owen2011OxygenBasedCellCycleModel::GetPhi )
                , "Get the value of phi.\n@return the value of phi.\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::GetSDuration
        
            typedef double ( ::Owen2011OxygenBasedCellCycleModel::*GetSDuration_function_type)(  ) const;
            typedef double ( Owen2011OxygenBasedCellCycleModel_wrapper::*default_GetSDuration_function_type)(  ) const;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "GetSDuration"
                , GetSDuration_function_type(&::Owen2011OxygenBasedCellCycleModel::GetSDuration)
                , default_GetSDuration_function_type(&Owen2011OxygenBasedCellCycleModel_wrapper::default_GetSDuration) );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::GetVEGF
        
            typedef double ( ::Owen2011OxygenBasedCellCycleModel::*GetVEGF_function_type)(  ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "GetVEGF"
                , GetVEGF_function_type( &::Owen2011OxygenBasedCellCycleModel::GetVEGF )
                , "Get the value of VEGF.\n@return the value of VEGF.\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::Initialise
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*Initialise_function_type)(  ) ;
            typedef void ( Owen2011OxygenBasedCellCycleModel_wrapper::*default_Initialise_function_type)(  ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "Initialise"
                , Initialise_function_type(&::Owen2011OxygenBasedCellCycleModel::Initialise)
                , default_Initialise_function_type(&Owen2011OxygenBasedCellCycleModel_wrapper::default_Initialise) );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::InitialiseDaughterCell
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*InitialiseDaughterCell_function_type)(  ) ;
            typedef void ( Owen2011OxygenBasedCellCycleModel_wrapper::*default_InitialiseDaughterCell_function_type)(  ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "InitialiseDaughterCell"
                , InitialiseDaughterCell_function_type(&::Owen2011OxygenBasedCellCycleModel::InitialiseDaughterCell)
                , default_InitialiseDaughterCell_function_type(&Owen2011OxygenBasedCellCycleModel_wrapper::default_InitialiseDaughterCell) );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::OutputCellCycleModelParameters
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*OutputCellCycleModelParameters_function_type)( ::out_stream & ) ;
            typedef void ( Owen2011OxygenBasedCellCycleModel_wrapper::*default_OutputCellCycleModelParameters_function_type)( ::out_stream & ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "OutputCellCycleModelParameters"
                , OutputCellCycleModelParameters_function_type(&::Owen2011OxygenBasedCellCycleModel::OutputCellCycleModelParameters)
                , default_OutputCellCycleModelParameters_function_type(&Owen2011OxygenBasedCellCycleModel_wrapper::default_OutputCellCycleModelParameters)
                , ( bp::arg("rParamsFile") ) );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::ReadyToDivide
        
            typedef bool ( ::Owen2011OxygenBasedCellCycleModel::*ReadyToDivide_function_type)(  ) ;
            typedef bool ( Owen2011OxygenBasedCellCycleModel_wrapper::*default_ReadyToDivide_function_type)(  ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "ReadyToDivide"
                , ReadyToDivide_function_type(&::Owen2011OxygenBasedCellCycleModel::ReadyToDivide)
                , default_ReadyToDivide_function_type(&Owen2011OxygenBasedCellCycleModel_wrapper::default_ReadyToDivide) );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::ResetForDivision
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*ResetForDivision_function_type)(  ) ;
            typedef void ( Owen2011OxygenBasedCellCycleModel_wrapper::*default_ResetForDivision_function_type)(  ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "ResetForDivision"
                , ResetForDivision_function_type(&::Owen2011OxygenBasedCellCycleModel::ResetForDivision)
                , default_ResetForDivision_function_type(&Owen2011OxygenBasedCellCycleModel_wrapper::default_ResetForDivision) );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::SetCriticalQuiescentDuration
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*SetCriticalQuiescentDuration_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "SetCriticalQuiescentDuration"
                , SetCriticalQuiescentDuration_function_type( &::Owen2011OxygenBasedCellCycleModel::SetCriticalQuiescentDuration )
                , ( bp::arg("criticalQuiescentDuration") )
                , "Set method for mCriticalQuiescentDuration.\n@param criticalQuiescentDuration the new value of mCriticalQuiescentDuration\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::SetCurrentQuiescenceOnsetTime
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*SetCurrentQuiescenceOnsetTime_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "SetCurrentQuiescenceOnsetTime"
                , SetCurrentQuiescenceOnsetTime_function_type( &::Owen2011OxygenBasedCellCycleModel::SetCurrentQuiescenceOnsetTime )
                , ( bp::arg("currentQuiescenceOnsetTime") )
                , "Set method for mCurrentQuiescenceOnsetTime.\n@param currentQuiescenceOnsetTime the new value of mCurrentQuiescenceOnsetTime\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::SetEnterQuiescenceOxygenConcentration
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*SetEnterQuiescenceOxygenConcentration_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< -1, 1 > >, boost::units::list< boost::units::dim< boost::units::mass_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< -2, 1 > >, boost::units::dimensionless_type > > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "SetEnterQuiescenceOxygenConcentration"
                , SetEnterQuiescenceOxygenConcentration_function_type( &::Owen2011OxygenBasedCellCycleModel::SetEnterQuiescenceOxygenConcentration )
                , ( bp::arg("enterQuiescenceOxygenConcentration") )
                , "Set method for mEnterQuiescenceOxygenConcentration.\n@param enterQuiescenceOxygenConcentration the new value of mEnterQuiescenceOxygenConcentration\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::SetG2Onset
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*SetG2Onset_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::dimensionless_type, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "SetG2Onset"
                , SetG2Onset_function_type( &::Owen2011OxygenBasedCellCycleModel::SetG2Onset )
                , ( bp::arg("value") )
                , "Set the G2 onset time\n@param value the G2 onset time\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::SetLeaveQuiescenceOxygenConcentration
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*SetLeaveQuiescenceOxygenConcentration_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< -1, 1 > >, boost::units::list< boost::units::dim< boost::units::mass_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< -2, 1 > >, boost::units::dimensionless_type > > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "SetLeaveQuiescenceOxygenConcentration"
                , SetLeaveQuiescenceOxygenConcentration_function_type( &::Owen2011OxygenBasedCellCycleModel::SetLeaveQuiescenceOxygenConcentration )
                , ( bp::arg("leaveQuiescenceOxygenConcentration") )
                , "Set method for mLeaveQuiescenceOxygenConcentration.\n@param leaveQuiescenceOxygenConcentration the new value of mLeaveQuiescenceOxygenConcentration\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::SetMOnset
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*SetMOnset_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::dimensionless_type, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "SetMOnset"
                , SetMOnset_function_type( &::Owen2011OxygenBasedCellCycleModel::SetMOnset )
                , ( bp::arg("value") )
                , "Set the M onset time\n@param value the M onset time\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::SetMaxRandInitialPhase
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*SetMaxRandInitialPhase_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::dimensionless_type, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "SetMaxRandInitialPhase"
                , SetMaxRandInitialPhase_function_type( &::Owen2011OxygenBasedCellCycleModel::SetMaxRandInitialPhase )
                , ( bp::arg("rand_max_phase") )
                , "Set maximum phase of cell upon initialisation.\n@param rand_max_phase the maximum phase value at initialization\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::SetOdeSolverTimeStep
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*SetOdeSolverTimeStep_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "SetOdeSolverTimeStep"
                , SetOdeSolverTimeStep_function_type( &::Owen2011OxygenBasedCellCycleModel::SetOdeSolverTimeStep )
                , ( bp::arg("timeStep") )
                , "Set the ODE solver time step\n@param timeStep the ODE solver time step\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::SetReferenceConcentrationScale
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*SetReferenceConcentrationScale_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< -3, 1 > >, boost::units::list< boost::units::dim< boost::units::amount_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "SetReferenceConcentrationScale"
                , SetReferenceConcentrationScale_function_type( &::Owen2011OxygenBasedCellCycleModel::SetReferenceConcentrationScale )
                , ( bp::arg("referenceConcentrationScale") )
                , "Set the reference concentration scale\n@param referenceConcentrationScale the reference concentration scale\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::SetReferenceTimeScale
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*SetReferenceTimeScale_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "SetReferenceTimeScale"
                , SetReferenceTimeScale_function_type( &::Owen2011OxygenBasedCellCycleModel::SetReferenceTimeScale )
                , ( bp::arg("referenceTimeScale") )
                , "Set the reference timescale\n@param referenceTimeScale the reference timescale\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::SetSOnset
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*SetSOnset_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::dimensionless_type, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "SetSOnset"
                , SetSOnset_function_type( &::Owen2011OxygenBasedCellCycleModel::SetSOnset )
                , ( bp::arg("value") )
                , "Set the S2 onset time\n@param value the S2 onset time\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::SetThresholdFractionOfNormalCellNeighbours
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*SetThresholdFractionOfNormalCellNeighbours_function_type)( double ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "SetThresholdFractionOfNormalCellNeighbours"
                , SetThresholdFractionOfNormalCellNeighbours_function_type( &::Owen2011OxygenBasedCellCycleModel::SetThresholdFractionOfNormalCellNeighbours )
                , ( bp::arg("value") )
                , "Set method for mthresholdFractionOfNormalCellNeighbours.\n@param value the new value of mthresholdFractionOfNormalCellNeighbours\n/" );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::UpdateCellCyclePhase
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*UpdateCellCyclePhase_function_type)(  ) ;
            typedef void ( Owen2011OxygenBasedCellCycleModel_wrapper::*default_UpdateCellCyclePhase_function_type)(  ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "UpdateCellCyclePhase"
                , UpdateCellCyclePhase_function_type(&::Owen2011OxygenBasedCellCycleModel::UpdateCellCyclePhase)
                , default_UpdateCellCyclePhase_function_type(&Owen2011OxygenBasedCellCycleModel_wrapper::default_UpdateCellCyclePhase) );
        
        }
        { //::Owen2011OxygenBasedCellCycleModel::UpdateQuiescentDuration
        
            typedef void ( ::Owen2011OxygenBasedCellCycleModel::*UpdateQuiescentDuration_function_type)(  ) ;
            
            Owen2011OxygenBasedCellCycleModel_exposer.def( 
                "UpdateQuiescentDuration"
                , UpdateQuiescentDuration_function_type( &::Owen2011OxygenBasedCellCycleModel::UpdateQuiescentDuration )
                , "Update the duration for which the cell has been quiescent.\n/" );
        
        }
    }
}
