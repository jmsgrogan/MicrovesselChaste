// This file has been generated by Py++.


/*

Copyright (c) 2005-2017, University of Oxford.
All rights reserved.

University of Oxford means the Chancellor, Masters and Scholars of the
University of Oxford, having an administrative office at Wellington
Square, Oxford OX1 2JD, UK.

This file is part of Chaste.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
 * Redistributions of source code must retain the above copyright notice,
   this list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.
 * Neither the name of the University of Oxford nor the names of its
   contributors may be used to endorse or promote products derived from this
   software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

*/

#include "boost/python.hpp"
#include "wrapper_header_collection.hpp"
#include "LQRadiotherapyCellKiller2.pypp.hpp"

namespace bp = boost::python;

struct LQRadiotherapyCellKiller_less__2__greater__wrapper : LQRadiotherapyCellKiller< 2 >, bp::wrapper< LQRadiotherapyCellKiller< 2 > > {

    LQRadiotherapyCellKiller_less__2__greater__wrapper(LQRadiotherapyCellKiller<2> const & arg )
    : LQRadiotherapyCellKiller<2>( arg )
      , bp::wrapper< LQRadiotherapyCellKiller< 2 > >(){
        // copy constructor
        
    }

    LQRadiotherapyCellKiller_less__2__greater__wrapper(::AbstractCellPopulation< 2, 2 > * pCellPopulation )
    : LQRadiotherapyCellKiller<2>( boost::python::ptr(pCellPopulation) )
      , bp::wrapper< LQRadiotherapyCellKiller< 2 > >(){
        // constructor
    
    }

    virtual void CheckAndLabelCellsForApoptosisOrDeath(  ) {
        if( bp::override func_CheckAndLabelCellsForApoptosisOrDeath = this->get_override( "CheckAndLabelCellsForApoptosisOrDeath" ) )
            func_CheckAndLabelCellsForApoptosisOrDeath(  );
        else{
            this->LQRadiotherapyCellKiller< 2 >::CheckAndLabelCellsForApoptosisOrDeath(  );
        }
    }
    
    void default_CheckAndLabelCellsForApoptosisOrDeath(  ) {
        LQRadiotherapyCellKiller< 2 >::CheckAndLabelCellsForApoptosisOrDeath( );
    }

    virtual void OutputCellKillerParameters( ::out_stream & rParamsFile ) {
        if( bp::override func_OutputCellKillerParameters = this->get_override( "OutputCellKillerParameters" ) )
            func_OutputCellKillerParameters( boost::ref(rParamsFile) );
        else{
            this->LQRadiotherapyCellKiller< 2 >::OutputCellKillerParameters( boost::ref(rParamsFile) );
        }
    }
    
    void default_OutputCellKillerParameters( ::out_stream & rParamsFile ) {
        LQRadiotherapyCellKiller< 2 >::OutputCellKillerParameters( boost::ref(rParamsFile) );
    }

};

void register_LQRadiotherapyCellKiller2_class(){

    { //::LQRadiotherapyCellKiller< 2 >
        typedef bp::class_< LQRadiotherapyCellKiller_less__2__greater__wrapper > LQRadiotherapyCellKiller2_exposer_t;
        LQRadiotherapyCellKiller2_exposer_t LQRadiotherapyCellKiller2_exposer = LQRadiotherapyCellKiller2_exposer_t( "LQRadiotherapyCellKiller2", bp::init< AbstractCellPopulation< 2, 2 > * >(( bp::arg("pCellPopulation") )) );
        bp::scope LQRadiotherapyCellKiller2_scope( LQRadiotherapyCellKiller2_exposer );
        bp::implicitly_convertible< AbstractCellPopulation< 2, 2 > *, LQRadiotherapyCellKiller< 2 > >();
        { //::LQRadiotherapyCellKiller< 2 >::AddTimeOfRadiation
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*AddTimeOfRadiation_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "AddTimeOfRadiation"
                , AddTimeOfRadiation_function_type( &::LQRadiotherapyCellKiller< 2 >::AddTimeOfRadiation )
                , ( bp::arg("time") ) );
        
        }
        { //::LQRadiotherapyCellKiller< 2 >::CheckAndLabelCellsForApoptosisOrDeath
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*CheckAndLabelCellsForApoptosisOrDeath_function_type)(  ) ;
            typedef void ( LQRadiotherapyCellKiller_less__2__greater__wrapper::*default_CheckAndLabelCellsForApoptosisOrDeath_function_type)(  ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "CheckAndLabelCellsForApoptosisOrDeath"
                , CheckAndLabelCellsForApoptosisOrDeath_function_type(&::LQRadiotherapyCellKiller< 2 >::CheckAndLabelCellsForApoptosisOrDeath)
                , default_CheckAndLabelCellsForApoptosisOrDeath_function_type(&LQRadiotherapyCellKiller_less__2__greater__wrapper::default_CheckAndLabelCellsForApoptosisOrDeath) );
        
        }
        { //::LQRadiotherapyCellKiller< 2 >::CheckAndLabelSingleCellForApoptosis
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*CheckAndLabelSingleCellForApoptosis_function_type)( ::CellPtr ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "CheckAndLabelSingleCellForApoptosis"
                , CheckAndLabelSingleCellForApoptosis_function_type( &::LQRadiotherapyCellKiller< 2 >::CheckAndLabelSingleCellForApoptosis )
                , ( bp::arg("pCell") ) );
        
        }
        { //::LQRadiotherapyCellKiller< 2 >::OutputCellKillerParameters
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*OutputCellKillerParameters_function_type)( ::out_stream & ) ;
            typedef void ( LQRadiotherapyCellKiller_less__2__greater__wrapper::*default_OutputCellKillerParameters_function_type)( ::out_stream & ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "OutputCellKillerParameters"
                , OutputCellKillerParameters_function_type(&::LQRadiotherapyCellKiller< 2 >::OutputCellKillerParameters)
                , default_OutputCellKillerParameters_function_type(&LQRadiotherapyCellKiller_less__2__greater__wrapper::default_OutputCellKillerParameters)
                , ( bp::arg("rParamsFile") ) );
        
        }
        { //::LQRadiotherapyCellKiller< 2 >::SetAlphaMax
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*SetAlphaMax_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< -2, 1 > >, boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 2, 1 > >, boost::units::dimensionless_type > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "SetAlphaMax"
                , SetAlphaMax_function_type( &::LQRadiotherapyCellKiller< 2 >::SetAlphaMax )
                , ( bp::arg("value") ) );
        
        }
        { //::LQRadiotherapyCellKiller< 2 >::SetBetaMax
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*SetBetaMax_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< -4, 1 > >, boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 4, 1 > >, boost::units::dimensionless_type > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "SetBetaMax"
                , SetBetaMax_function_type( &::LQRadiotherapyCellKiller< 2 >::SetBetaMax )
                , ( bp::arg("value") ) );
        
        }
        { //::LQRadiotherapyCellKiller< 2 >::SetCancerousRadiosensitivity
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*SetCancerousRadiosensitivity_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< -2, 1 > >, boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 2, 1 > >, boost::units::dimensionless_type > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double >,::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< -4, 1 > >, boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 4, 1 > >, boost::units::dimensionless_type > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "SetCancerousRadiosensitivity"
                , SetCancerousRadiosensitivity_function_type( &::LQRadiotherapyCellKiller< 2 >::SetCancerousRadiosensitivity )
                , ( bp::arg("alpha"), bp::arg("beta") ) );
        
        }
        { //::LQRadiotherapyCellKiller< 2 >::SetDoseInjected
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*SetDoseInjected_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 2, 1 > >, boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< -2, 1 > >, boost::units::dimensionless_type > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "SetDoseInjected"
                , SetDoseInjected_function_type( &::LQRadiotherapyCellKiller< 2 >::SetDoseInjected )
                , ( bp::arg("d") ) );
        
        }
        { //::LQRadiotherapyCellKiller< 2 >::SetNormalRadiosensitivity
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*SetNormalRadiosensitivity_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< -2, 1 > >, boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 2, 1 > >, boost::units::dimensionless_type > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double >,::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< -4, 1 > >, boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 4, 1 > >, boost::units::dimensionless_type > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "SetNormalRadiosensitivity"
                , SetNormalRadiosensitivity_function_type( &::LQRadiotherapyCellKiller< 2 >::SetNormalRadiosensitivity )
                , ( bp::arg("alpha"), bp::arg("beta") ) );
        
        }
        { //::LQRadiotherapyCellKiller< 2 >::SetOerAlphaMax
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*SetOerAlphaMax_function_type)( double ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "SetOerAlphaMax"
                , SetOerAlphaMax_function_type( &::LQRadiotherapyCellKiller< 2 >::SetOerAlphaMax )
                , ( bp::arg("value") ) );
        
        }
        { //::LQRadiotherapyCellKiller< 2 >::SetOerAlphaMin
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*SetOerAlphaMin_function_type)( double ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "SetOerAlphaMin"
                , SetOerAlphaMin_function_type( &::LQRadiotherapyCellKiller< 2 >::SetOerAlphaMin )
                , ( bp::arg("value") ) );
        
        }
        { //::LQRadiotherapyCellKiller< 2 >::SetOerBetaMax
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*SetOerBetaMax_function_type)( double ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "SetOerBetaMax"
                , SetOerBetaMax_function_type( &::LQRadiotherapyCellKiller< 2 >::SetOerBetaMax )
                , ( bp::arg("value") ) );
        
        }
        { //::LQRadiotherapyCellKiller< 2 >::SetOerBetaMin
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*SetOerBetaMin_function_type)( double ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "SetOerBetaMin"
                , SetOerBetaMin_function_type( &::LQRadiotherapyCellKiller< 2 >::SetOerBetaMin )
                , ( bp::arg("value") ) );
        
        }
        { //::LQRadiotherapyCellKiller< 2 >::SetOerConstant
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*SetOerConstant_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< -3, 1 > >, boost::units::list< boost::units::dim< boost::units::amount_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "SetOerConstant"
                , SetOerConstant_function_type( &::LQRadiotherapyCellKiller< 2 >::SetOerConstant )
                , ( bp::arg("value") ) );
        
        }
        { //::LQRadiotherapyCellKiller< 2 >::SetTimeOfRadiation
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*SetTimeOfRadiation_function_type)( ::std::vector< boost::units::quantity<boost::units::unit<boost::units::list<boost::units::dim<boost::units::time_base_dimension, boost::units::static_rational<1, 1> >, boost::units::dimensionless_type>, boost::units::homogeneous_system<boost::units::list<boost::units::si::meter_base_unit, boost::units::list<boost::units::scaled_base_unit<boost::units::cgs::gram_base_unit, boost::units::scale<10, boost::units::static_rational<3> > >, boost::units::list<boost::units::si::second_base_unit, boost::units::list<boost::units::si::ampere_base_unit, boost::units::list<boost::units::si::kelvin_base_unit, boost::units::list<boost::units::si::mole_base_unit, boost::units::list<boost::units::si::candela_base_unit, boost::units::list<boost::units::angle::radian_base_unit, boost::units::list<boost::units::angle::steradian_base_unit, boost::units::dimensionless_type> > > > > > > > > >, void>, double> > ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "SetTimeOfRadiation"
                , SetTimeOfRadiation_function_type( &::LQRadiotherapyCellKiller< 2 >::SetTimeOfRadiation )
                , ( bp::arg("t") ) );
        
        }
        { //::LQRadiotherapyCellKiller< 2 >::UseOer
        
            typedef LQRadiotherapyCellKiller< 2 > exported_class_t;
            typedef void ( exported_class_t::*UseOer_function_type)( bool ) ;
            
            LQRadiotherapyCellKiller2_exposer.def( 
                "UseOer"
                , UseOer_function_type( &::LQRadiotherapyCellKiller< 2 >::UseOer )
                , ( bp::arg("useOer") ) );
        
        }
    }

}
