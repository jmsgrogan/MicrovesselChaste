// This file has been generated by Py++.


/*

Copyright (c) 2005-2017, University of Oxford.
All rights reserved.

University of Oxford means the Chancellor, Masters and Scholars of the
University of Oxford, having an administrative office at Wellington
Square, Oxford OX1 2JD, UK.

This file is part of Chaste.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
 * Redistributions of source code must retain the above copyright notice,
   this list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.
 * Neither the name of the University of Oxford nor the names of its
   contributors may be used to endorse or promote products derived from this
   software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

*/

#include "boost/python.hpp"
#include "wrapper_header_collection.hpp"
#include "CornealMicropocketSimulation3.pypp.hpp"

namespace bp = boost::python;

void register_CornealMicropocketSimulation3_class(){

    { //::CornealMicropocketSimulation< 3 >
        typedef bp::class_< CornealMicropocketSimulation< 3 > > CornealMicropocketSimulation3_exposer_t;
        CornealMicropocketSimulation3_exposer_t CornealMicropocketSimulation3_exposer = CornealMicropocketSimulation3_exposer_t( "CornealMicropocketSimulation3", bp::init< >() );
        bp::scope CornealMicropocketSimulation3_scope( CornealMicropocketSimulation3_exposer );
        { //::CornealMicropocketSimulation< 3 >::Create
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef ::boost::shared_ptr< CornealMicropocketSimulation< 3 > > ( *Create_function_type )(  );
            
            CornealMicropocketSimulation3_exposer.def( 
                "Create"
                , Create_function_type( &::CornealMicropocketSimulation< 3 >::Create ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::DoSampling
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*DoSampling_function_type)( ::std::ofstream &,::boost::shared_ptr< AbstractDiscreteContinuumSolver< 3 > >,double,double,bool ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "DoSampling"
                , DoSampling_function_type( &::CornealMicropocketSimulation< 3 >::DoSampling )
                , ( bp::arg("rStream"), bp::arg("pSolver"), bp::arg("time"), bp::arg("multfact")=1., bp::arg("sampleOnce")=(bool)(false) ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::Run
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*Run_function_type)(  ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "Run"
                , Run_function_type( &::CornealMicropocketSimulation< 3 >::Run ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetAttractionStrength
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetAttractionStrength_function_type)( double ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetAttractionStrength"
                , SetAttractionStrength_function_type( &::CornealMicropocketSimulation< 3 >::SetAttractionStrength )
                , ( bp::arg("attractionStrength") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetChemotacticStrength
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetChemotacticStrength_function_type)( double ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetChemotacticStrength"
                , SetChemotacticStrength_function_type( &::CornealMicropocketSimulation< 3 >::SetChemotacticStrength )
                , ( bp::arg("chemotacticStrength") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetCorneaRadius
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetCorneaRadius_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetCorneaRadius"
                , SetCorneaRadius_function_type( &::CornealMicropocketSimulation< 3 >::SetCorneaRadius )
                , ( bp::arg("corneaRadius") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetCorneaThickness
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetCorneaThickness_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetCorneaThickness"
                , SetCorneaThickness_function_type( &::CornealMicropocketSimulation< 3 >::SetCorneaThickness )
                , ( bp::arg("corneaThickness") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetDensityGridSpacing
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetDensityGridSpacing_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetDensityGridSpacing"
                , SetDensityGridSpacing_function_type( &::CornealMicropocketSimulation< 3 >::SetDensityGridSpacing )
                , ( bp::arg("densityGridSpacing") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetDoAnastamosis
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetDoAnastamosis_function_type)( bool ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetDoAnastamosis"
                , SetDoAnastamosis_function_type( &::CornealMicropocketSimulation< 3 >::SetDoAnastamosis )
                , ( bp::arg("doAnastamosis") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetDomainType
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetDomainType_function_type)( ::DomainType::Value ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetDomainType"
                , SetDomainType_function_type( &::CornealMicropocketSimulation< 3 >::SetDomainType )
                , ( bp::arg("domainType") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetElementArea2d
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetElementArea2d_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 3, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetElementArea2d"
                , SetElementArea2d_function_type( &::CornealMicropocketSimulation< 3 >::SetElementArea2d )
                , ( bp::arg("elementArea2d") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetElementArea3d
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetElementArea3d_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 3, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetElementArea3d"
                , SetElementArea3d_function_type( &::CornealMicropocketSimulation< 3 >::SetElementArea3d )
                , ( bp::arg("elementArea3d") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetFinitePelletWidth
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetFinitePelletWidth_function_type)( bool ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetFinitePelletWidth"
                , SetFinitePelletWidth_function_type( &::CornealMicropocketSimulation< 3 >::SetFinitePelletWidth )
                , ( bp::arg("finitePelletWidth") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetGridSpacing
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetGridSpacing_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetGridSpacing"
                , SetGridSpacing_function_type( &::CornealMicropocketSimulation< 3 >::SetGridSpacing )
                , ( bp::arg("gridSpacing") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetIncludeVesselSink
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetIncludeVesselSink_function_type)( bool ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetIncludeVesselSink"
                , SetIncludeVesselSink_function_type( &::CornealMicropocketSimulation< 3 >::SetIncludeVesselSink )
                , ( bp::arg("includeVesselSink") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetLimbalOffset
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetLimbalOffset_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetLimbalOffset"
                , SetLimbalOffset_function_type( &::CornealMicropocketSimulation< 3 >::SetLimbalOffset )
                , ( bp::arg("limbalOffset") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetNodeSpacing
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetNodeSpacing_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetNodeSpacing"
                , SetNodeSpacing_function_type( &::CornealMicropocketSimulation< 3 >::SetNodeSpacing )
                , ( bp::arg("nodeSpacing") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetOnlyPerfusedSprout
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetOnlyPerfusedSprout_function_type)( bool ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetOnlyPerfusedSprout"
                , SetOnlyPerfusedSprout_function_type( &::CornealMicropocketSimulation< 3 >::SetOnlyPerfusedSprout )
                , ( bp::arg("onlyPerfused") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetPdeTimeIncrement
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetPdeTimeIncrement_function_type)( double ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetPdeTimeIncrement"
                , SetPdeTimeIncrement_function_type( &::CornealMicropocketSimulation< 3 >::SetPdeTimeIncrement )
                , ( bp::arg("pdeTimeIncrement") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetPelletConcentration
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetPelletConcentration_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< -3, 1 > >, boost::units::list< boost::units::dim< boost::units::amount_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetPelletConcentration"
                , SetPelletConcentration_function_type( &::CornealMicropocketSimulation< 3 >::SetPelletConcentration )
                , ( bp::arg("pelletConcentration") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetPelletHeight
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetPelletHeight_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetPelletHeight"
                , SetPelletHeight_function_type( &::CornealMicropocketSimulation< 3 >::SetPelletHeight )
                , ( bp::arg("pelletHeight") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetPelletRadius
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetPelletRadius_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetPelletRadius"
                , SetPelletRadius_function_type( &::CornealMicropocketSimulation< 3 >::SetPelletRadius )
                , ( bp::arg("pelletRadius") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetPelletThickness
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetPelletThickness_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetPelletThickness"
                , SetPelletThickness_function_type( &::CornealMicropocketSimulation< 3 >::SetPelletThickness )
                , ( bp::arg("pelletThickness") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetPersistenceAngle
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetPersistenceAngle_function_type)( double ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetPersistenceAngle"
                , SetPersistenceAngle_function_type( &::CornealMicropocketSimulation< 3 >::SetPersistenceAngle )
                , ( bp::arg("persistenceAngle") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetRandomSeed
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetRandomSeed_function_type)( unsigned int ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetRandomSeed"
                , SetRandomSeed_function_type( &::CornealMicropocketSimulation< 3 >::SetRandomSeed )
                , ( bp::arg("randomSeed") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetRunNumber
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetRunNumber_function_type)( unsigned int ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetRunNumber"
                , SetRunNumber_function_type( &::CornealMicropocketSimulation< 3 >::SetRunNumber )
                , ( bp::arg("runNumber") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetSampleFrequency
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetSampleFrequency_function_type)( unsigned int ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetSampleFrequency"
                , SetSampleFrequency_function_type( &::CornealMicropocketSimulation< 3 >::SetSampleFrequency )
                , ( bp::arg("freq") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetSampleSpacingX
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetSampleSpacingX_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetSampleSpacingX"
                , SetSampleSpacingX_function_type( &::CornealMicropocketSimulation< 3 >::SetSampleSpacingX )
                , ( bp::arg("sampleSpacingX") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetSampleSpacingY
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetSampleSpacingY_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetSampleSpacingY"
                , SetSampleSpacingY_function_type( &::CornealMicropocketSimulation< 3 >::SetSampleSpacingY )
                , ( bp::arg("sampleSpacingY") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetSampleSpacingZ
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetSampleSpacingZ_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetSampleSpacingZ"
                , SetSampleSpacingZ_function_type( &::CornealMicropocketSimulation< 3 >::SetSampleSpacingZ )
                , ( bp::arg("sampleSpacingZ") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetSproutingProbability
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetSproutingProbability_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< -1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetSproutingProbability"
                , SetSproutingProbability_function_type( &::CornealMicropocketSimulation< 3 >::SetSproutingProbability )
                , ( bp::arg("sproutingProbability") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetTimeStepSize
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetTimeStepSize_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetTimeStepSize"
                , SetTimeStepSize_function_type( &::CornealMicropocketSimulation< 3 >::SetTimeStepSize )
                , ( bp::arg("timeStepSize") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetTipExclusionRadius
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetTipExclusionRadius_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetTipExclusionRadius"
                , SetTipExclusionRadius_function_type( &::CornealMicropocketSimulation< 3 >::SetTipExclusionRadius )
                , ( bp::arg("tipExclusionRadius") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetTipVelocity
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetTipVelocity_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< -1, 1 > >, boost::units::dimensionless_type > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetTipVelocity"
                , SetTipVelocity_function_type( &::CornealMicropocketSimulation< 3 >::SetTipVelocity )
                , ( bp::arg("velocity") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetTotalTime
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetTotalTime_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetTotalTime"
                , SetTotalTime_function_type( &::CornealMicropocketSimulation< 3 >::SetTotalTime )
                , ( bp::arg("totalTime") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetUpDomain
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef ::boost::shared_ptr< Part< 3 > > ( exported_class_t::*SetUpDomain_function_type)(  ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetUpDomain"
                , SetUpDomain_function_type( &::CornealMicropocketSimulation< 3 >::SetUpDomain ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetUpGrid
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef ::boost::shared_ptr< AbstractDiscreteContinuumGrid< 3, 3 > > ( exported_class_t::*SetUpGrid_function_type)( bool ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetUpGrid"
                , SetUpGrid_function_type( &::CornealMicropocketSimulation< 3 >::SetUpGrid )
                , ( bp::arg("mSampling")=(bool)(false) ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetUpSamplePoints
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetUpSamplePoints_function_type)(  ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetUpSamplePoints"
                , SetUpSamplePoints_function_type( &::CornealMicropocketSimulation< 3 >::SetUpSamplePoints ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetUpSolver
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetUpSolver_function_type)(  ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetUpSolver"
                , SetUpSolver_function_type( &::CornealMicropocketSimulation< 3 >::SetUpSolver ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetUpVesselNetwork
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef ::boost::shared_ptr< VesselNetwork< 3 > > ( exported_class_t::*SetUpVesselNetwork_function_type)(  ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetUpVesselNetwork"
                , SetUpVesselNetwork_function_type( &::CornealMicropocketSimulation< 3 >::SetUpVesselNetwork ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetUptakeRatePerCell
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetUptakeRatePerCell_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< -1, 1 > >, boost::units::list< boost::units::dim< boost::units::amount_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetUptakeRatePerCell"
                , SetUptakeRatePerCell_function_type( &::CornealMicropocketSimulation< 3 >::SetUptakeRatePerCell )
                , ( bp::arg("uptakeRatePerCell") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetUseFixedGradient
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetUseFixedGradient_function_type)( bool ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetUseFixedGradient"
                , SetUseFixedGradient_function_type( &::CornealMicropocketSimulation< 3 >::SetUseFixedGradient )
                , ( bp::arg("useFixedGradient") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetUsePdeOnly
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetUsePdeOnly_function_type)( bool ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetUsePdeOnly"
                , SetUsePdeOnly_function_type( &::CornealMicropocketSimulation< 3 >::SetUsePdeOnly )
                , ( bp::arg("usePdeOnly") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetUsePellet
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetUsePellet_function_type)( bool ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetUsePellet"
                , SetUsePellet_function_type( &::CornealMicropocketSimulation< 3 >::SetUsePellet )
                , ( bp::arg("usePellet") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetVegfBindingConstant
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetVegfBindingConstant_function_type)( double ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetVegfBindingConstant"
                , SetVegfBindingConstant_function_type( &::CornealMicropocketSimulation< 3 >::SetVegfBindingConstant )
                , ( bp::arg("vegfBindingConstant") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetVegfBloodConcentration
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetVegfBloodConcentration_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< -3, 1 > >, boost::units::list< boost::units::dim< boost::units::amount_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::dimensionless_type > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetVegfBloodConcentration"
                , SetVegfBloodConcentration_function_type( &::CornealMicropocketSimulation< 3 >::SetVegfBloodConcentration )
                , ( bp::arg("vegfBloodConcentration") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetVegfDecayRate
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetVegfDecayRate_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< -1, 1 > >, boost::units::dimensionless_type >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > const ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetVegfDecayRate"
                , SetVegfDecayRate_function_type( &::CornealMicropocketSimulation< 3 >::SetVegfDecayRate )
                , ( bp::arg("vegfDecayRate") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetVegfDiffusivity
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetVegfDiffusivity_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 2, 1 > >, boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< -1, 1 > >, boost::units::dimensionless_type > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetVegfDiffusivity"
                , SetVegfDiffusivity_function_type( &::CornealMicropocketSimulation< 3 >::SetVegfDiffusivity )
                , ( bp::arg("vegfDiffusivity") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetVegfPermeability
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetVegfPermeability_function_type)( ::boost::units::quantity< boost::units::unit< boost::units::list< boost::units::dim< boost::units::length_base_dimension, boost::units::static_rational< 1, 1 > >, boost::units::list< boost::units::dim< boost::units::time_base_dimension, boost::units::static_rational< -1, 1 > >, boost::units::dimensionless_type > >, boost::units::homogeneous_system< boost::units::list< boost::units::si::meter_base_unit, boost::units::list< boost::units::scaled_base_unit< boost::units::cgs::gram_base_unit, boost::units::scale< 10, boost::units::static_rational< 3 > > >, boost::units::list< boost::units::si::second_base_unit, boost::units::list< boost::units::si::ampere_base_unit, boost::units::list< boost::units::si::kelvin_base_unit, boost::units::list< boost::units::si::mole_base_unit, boost::units::list< boost::units::si::candela_base_unit, boost::units::list< boost::units::angle::radian_base_unit, boost::units::list< boost::units::angle::steradian_base_unit, boost::units::dimensionless_type > > > > > > > > > >, void >, double > ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetVegfPermeability"
                , SetVegfPermeability_function_type( &::CornealMicropocketSimulation< 3 >::SetVegfPermeability )
                , ( bp::arg("vegfPermeability") ) );
        
        }
        { //::CornealMicropocketSimulation< 3 >::SetWorkDir
        
            typedef CornealMicropocketSimulation< 3 > exported_class_t;
            typedef void ( exported_class_t::*SetWorkDir_function_type)( ::std::string ) ;
            
            CornealMicropocketSimulation3_exposer.def( 
                "SetWorkDir"
                , SetWorkDir_function_type( &::CornealMicropocketSimulation< 3 >::SetWorkDir )
                , ( bp::arg("workDir") ) );
        
        }
        CornealMicropocketSimulation3_exposer.staticmethod( "Create" );
        bp::register_ptr_to_python< boost::shared_ptr< CornealMicropocketSimulation<3> > >();
    }

}
